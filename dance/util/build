#!/bin/zsh

target=`yq -r .workbook data/setup.yaml` # requires yq and jq to read config file in shell

FILE=$(echo $target | sed s/$target:t/~\$$target:t/) # Excel's temp file name
if [[ -f "$FILE" ]]; then
    echo "$FILE exists indicating target is open."
    exit 1
fi

# document the lambdas
dance/util/doc_lambda.py

# run the main build
dance/setup/create_wb.py $target -o # -p
RC=$?
if [ $RC -ne 0 ]; then
  echo "create_wb failed"
  exit $RC
fi

# load preserved values
dance/preserve_changed.py -l

# pull in the ytd reprojections
dance/ytd.py -l -f

# Setting the workbook theme as one of the items in the themes folder
dance/util/reveal.py
theme=`yq -r .theme data/setup.yaml`
cp "themes/$theme.xml" tmp/xl/theme/theme1.xml
dance/util/reseal.py

# Calc property going forward
dance/setup/calc_props.py fullPrecision 0 -w $target # 0 means Set precision as displayed

# open, calculate and save
# this allows Excel to compute the formulas and setup some hidden defined names

# is the following needed?
dance/setup/calc_props.py fullCalcOnLoad 1

dance/util/logs.py "Opening the file." 
open $target
sleep 1 # avoid:  execution error: Microsoft Excel got an error: Parameter error. (-50)

# manual method:
#echo "Please save and exit and press enter on this screen when done"
#vared -p 'Press enter when calc is done and saved: ' -c tmp

#MacOS automation method
osascript -e 'tell app "Microsoft Excel" to save' 
osascript -e 'tell app "Microsoft Excel" to quit' 
dance/util/logs.py "Saved"

# skip diagnostics
#dance/experimental/reveal.py
#xmllint --format tmp/xl/workbook.xml | grep '<calcPr'
#xmllint --format tmp/xl/theme/theme1.xml | grep "<a:clrScheme"

# run checks to see if calcs completed.  
tests/cross_check.py -g balances 

ret=$?
if [ $ret -ne 0 ]; then
        dance/util/logs.py -w "Only $ret % of tests were successful"
else
        dance/util/logs.py "All tests succeeded"
fi
