#! /usr/bin/env python

'''Checks worksheet values against iande.tsv'

'''

  # utility to compare the iande I, T and X values between moneydance iande report and the worksheet
  # for I removes the capgn sales amounts before checking
import argparse

import pandas as pd

from dance.util.files import tsv_to_df,read_config
from dance.util.tables import df_for_table_name
from tests.helpers import actual_years, align,  get_row_set, stack_as


def md_iande():
  '''Get the moneydance exported data

  returns: a DataFrame 
  '''
  years,_=actual_years()
  years=[f"{y}"for y in years]
  yyears=[f"Y{y}" for y in years]
  cmap=dict(zip(years,yyears))
  path=read_config()['sheets']['iande']['tables'][0]['data']['path']
  iande=tsv_to_df(path,skiprows=3)
  iande['Account']=iande.Account.str.strip()
  iande.set_index('Account',inplace=True)
  iande.rename(columns=cmap,inplace=True)
  return iande[yyears]

def iande_test_pairs(workbook):
  '''
  get a dataframe with expected and found values for actual balances
  index is (Account,Year)
  '''
  md_df=md_iande() 
  total_rows=['I - TOTAL','T - TOTAL','X - TOTAL']
  wkbk_rows=['Income:I:Invest income:CapGn:Sales','Income:I:Invest income:CapGn:Shelt:Sales','Income:I - TOTAL','Expenses:T - TOTAL','Expenses:X - TOTAL']
  md_df=md_df.loc[total_rows]
  md_df=stack_as(md_df,'IandE tsv values')

  w_df=get_row_set(workbook=workbook,table_name='tbl_iande',filter_on='index',in_list=wkbk_rows,index_on='index')
  df=w_df.iloc[[2]]-w_df.head(2).sum(axis=0) # remove cap gain sales
  df=pd.concat([df,w_df.tail(2)]) # carry forward T and X
  df.index=df.index.str.split(':',expand=True).droplevel()
  df=stack_as(df,'Wkbk (net) values')

  joined_vals=align([md_df,df])

  return joined_vals

if __name__ == '__main__':
  # execute only if run as a script
  config=read_config()
  workbook=config['workbook']
  parser = argparse.ArgumentParser(description ='This program reads the values from the saved I and E report \
    generated by Moneydance and matches to those to the values from %s'%workbook)
  parser.add_argument('-workbook',default=workbook,help='provide an alternative workbook')
  args=parser.parse_args()
  df=iande_test_pairs(args.workbook)
  zeros=df.diff(axis=1)[df.columns[1]]==0
  msg='%d out of %d balances matched'%(zeros.sum(),len(zeros))
  print(msg)
